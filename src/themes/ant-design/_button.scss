
@import "./mixins/button";

$btn-prefix-cls: "#{$ant-prefix}-btn";

// for compatibile
$btn-ghost-color: $text-color;
$btn-ghost-bg: transparent;
$btn-ghost-border: $border-color-base;

// Button styles
// -----------------------------
.#{$btn-prefix-cls} {
    @include btn();
    @include btn-default();

  // Make sure that the target of Button's click event always be `button`
  // Ref: https://github.com/ant-design/ant-design/issues/7034
  > i,
  > span {
    pointer-events: none;
  }

  &-primary {
    @include btn-primary();

    .#{$btn-prefix-cls}-group &:not(:first-child):not(:last-child) {
      border-right-color: $btn-group-border;
      border-left-color: $btn-group-border;

      &:disabled {
        border-color: $btn-default-border;
      }
    }

    .#{$btn-prefix-cls}-group &:first-child {
      &:not(:last-child) {
        border-right-color: $btn-group-border;
        &[disabled] {
          border-right-color: $btn-default-border;
        }
      }
    }

    .#{$btn-prefix-cls}-group &:last-child:not(:first-child),
    .#{$btn-prefix-cls}-group & + & {
      border-left-color: $btn-group-border;
      &[disabled] {
        border-left-color: $btn-default-border;
      }
    }
  }

  &-ghost {
    @include btn-ghost();
  }

  &-dashed {
    @include btn-dashed();
  }

  &-danger {
    @include btn-danger();
  }

  &-circle,
  &-circle-outline {
    @include btn-circle($btn-prefix-cls);
  }

  &:before {
    position: absolute;
    top: -1px;
    left: -1px;
    bottom: -1px;
    right: -1px;
    background: #fff;
    opacity: 0.35;
    content: '';
    border-radius: inherit;
    z-index: 1;
    transition: opacity .2s;
    pointer-events: none;
    display: none;
  }

  .#{$iconfont-css-prefix} {
    transition: margin-left .3s $ease-in-out;
  }

//   &&-loading:before {
    &.#{$btn-prefix-cls}-loading:before {
    display: block;
  }

  //&&-loading:not(&-circle):not(&-circle-outline):not(&-icon-only) {
    &.#{$btn-prefix-cls}-loading:not(&-circle):not(&-circle-outline):not(&-icon-only) {
    padding-left: 29px;
    pointer-events: none;
    position: relative;
    .#{$iconfont-css-prefix} {
      margin-left: -14px;
    }
  }

//   &-sm&-loading:not(&-circle):not(&-circle-outline):not(&-icon-only) {
    &-sm.#{$btn-prefix-cls}-loading:not(&-circle):not(&-circle-outline):not(&-icon-only) {
    padding-left: 24px;
    .#{$iconfont-css-prefix} {
      margin-left: -17px;
    }
  }

  &-group {
    @include btn-group($btn-prefix-cls);
  }

//   &:not(&-circle):not(&-circle-outline)&-icon-only {
    &:not(&-circle):not(&-circle-outline).#{$btn-prefix-cls}-icon-only {
    padding-left: 8px;
    padding-right: 8px;
  }

  // http://stackoverflow.com/a/21281554/3040605
  &:focus > span,
  &:active > span {
    position: relative;
  }

  // To ensure that a space will be placed between character and `Icon`.
  > .#{$iconfont-css-prefix} + span,
  > span + .#{$iconfont-css-prefix} {
    margin-left: 0.5em;
  }

  &-clicked:after {
    content: '';
    position: absolute;
    top: -1px;
    left: -1px;
    bottom: -1px;
    right: -1px;
    border-radius: inherit;
    border: 0 solid $primary-color-0;
    opacity: 0.4;
    animation: buttonEffect .4s;
    display: block;
  }

//   &-danger&-clicked:after {
    &-danger.#{$btn-prefix-cls}-clicked:after {
    border-color: $btn-danger-color;
  }

  &-background-ghost {
    background: transparent !important;
    border-color: #fff;
    color: #fff;
  }

//   &-background-ghost&-primary {
    &-background-ghost.#{$btn-prefix-cls}-primary {
    @include button-variant-ghost($primary-color-0);
  }

//   &-background-ghost&-danger {
    &-background-ghost.#{$btn-prefix-cls}-danger {
     @include button-variant-ghost($btn-danger-color);
  }
}

@keyframes buttonEffect {
  to {
    opacity: 0;
    top: -6px;
    left: -6px;
    bottom: -6px;
    right: -6px;
    border-width: 6px;
  }
}


  