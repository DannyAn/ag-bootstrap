
@import "clearfix";
// mixins for grid system
// ------------------------
@mixin make-row($gutter: $grid-gutter-width) {
    position: relative;
    margin-left: ($gutter / -2);
    margin-right: ($gutter / -2);
    height: auto;
    @include clearfix;
  }
  
  @mixin make-grid-columns() {
    @mixin col($index) {
      $item: ".#{$ant-prefix}-col-#{$index}, .#{$ant-prefix}-col-xs-#{$index}, .#{$ant-prefix}-col-sm-#{$index}, .#{$ant-prefix}-col-md-#{$index}, .#{$ant-prefix}-col-lg-#{$index}";
      @include col(($index + 1), $item);
    }
    
    @mixin col($index, $list){
      @if ($index <= $grid-columns) 
    {
      $item: ".#{$ant-prefix}-col-#{$index}, .#{$ant-prefix}-col-xs-#{$index}, .#{$ant-prefix}-col-sm-#{$index}, .#{$ant-prefix}-col-md-#{$index}, .#{$ant-prefix}-col-lg-#{$index}";
      @include col(($index + 1), "#{$list}, #{$item}");
    }
}
    
    @mixin col($index, $list){
      @if ($index > $grid-columns) 
    {
      #{$list} {
        position: relative;
        // Prevent columns from collapsing when empty
        min-height: 1px;
        padding-left: ($grid-gutter-width / 2);
        padding-right: ($grid-gutter-width / 2);
      }
    }
    @include col(1);
  }
}

@mixin general-column($class,$index, $list) { // general
  @if ($index <= $grid-columns){
    $item: ".#{$ant-prefix}-col#{$class}-#{$index}";
    $listItems: "#{$list}, #{$item}";
    @include general-column($class,($index + 1), $listItems);
}

@if ($index > $grid-columns) {
  #{$list} {
  float: left;
  flex: 0 0 auto;
  }
 }
}

@mixin initial-column($class,$index) { // initial
  $item: ".#{$ant-prefix}-col#{$class}-#{$index}";
  @include general-column($class,($index + 1), $item);
}
  @mixin float-grid-columns($class) {

    
   
    // @mixin col($index, $list) { // terminal
    //       @if ($index > $grid-columns) {
    //     #{$list} {
    //     float: left;
    //     flex: 0 0 auto;
    //     }
    //    }
    // }
    @include initial-column($class,1); // kickstart it
  }
  
  // lesshint false
 
  @mixin loop-grid-columns($index, $class){
    @if ($index > 0) {
    .#{$ant-prefix}-col#{$class}-#{$index} {
      display: block;
      width: percentage(($index / $grid-columns));
    }
    .#{$ant-prefix}-col#{$class}-push-#{$index} {
      left: percentage(($index / $grid-columns));
    }
    .#{$ant-prefix}-col#{$class}-pull-#{$index} {
      right: percentage(($index / $grid-columns));
    }
    .#{$ant-prefix}-col#{$class}-offset-#{$index} {
      margin-left: percentage(($index / $grid-columns));
    }
    .#{$ant-prefix}-col#{$class}-order-#{$index} {
      order: $index;
    }
    @include loop-grid-columns(($index - 1), $class);
  }
}

  @mixin loop-grid-columns($index, $class) {
    @if ($index = 0) {
    .#{$ant-prefix}-col#{$class}-#{$index} {
      display: none;
    }
    .#{$ant-prefix}-col-push-#{$index} {
      left: auto;
    }
    .#{$ant-prefix}-col-pull-#{$index} {
      right: auto;
    }
    .#{$ant-prefix}-col#{$class}-push-#{$index} {
      left: auto;
    }
    .#{$ant-prefix}-col#{$class}-pull-#{$index} {
      right: auto;
    }
    .#{$ant-prefix}-col#{$class}-offset-#{$index} {
      margin-left: 0;
    }
    .#{$ant-prefix}-col#{$class}-order-#{$index} {
      order: 0;
    }
  }
}
  @mixin make-grid($class: '') {
    @include float-grid-columns($class);
    @include loop-grid-columns($grid-columns, $class);
  }
  

  