// mixins for button
// ------------------------
@mixin button-size($height, $padding, $font-size, $border-radius) {
  padding: $padding;
  font-size: $font-size;
  border-radius: $border-radius;
  height: $height;
}

@mixin button-color($color, $background, $border) {
  color: $color;
  background-color: $background;
  border-color: $border;
  // a inside Button which only work in Chrome
  // http://stackoverflow.com/a/17253457
  > a:only-child {
    color: currentColor;
    &:after {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      bottom: 0;
      right: 0;
      background: transparent;
    }
  }
}

@mixin button-disabled() {
  &.disabled,
  &[disabled] {
    &,
    &:hover,
    &:focus,
    &:active,
    &.active {
      @include button-color($btn-disable-color, $btn-disable-bg, $btn-disable-border);
    }
  }
}

@mixin button-variant-primary($color, $background) {
  @include button-color($color,$background,$background);

  &:hover,
  &:focus {
    //@include button-color($color, tint(#{$background}, 50%),tint(#{$background}, 50%));
    @include button-color($color,  $background ,$background);
  }

  &:active,
  &.active {
    @include button-color($color, tint("#{$background}", 70%),tint("#{$background}", 70%));
  }

  @include button-disabled();
}

@mixin button-variant-other($color, $background,$border) {
  @include button-color($color, $background, $border);

  &:hover,
  &:focus {
      @include button-color($primary-color-0,$background, $primary-color-0);
  }

  &:active,
  &.active {
      @include button-color($primary-7,$background, $primary-7);
  }

  @include button-disabled();
}

@mixin button-variant-danger($color,$background, $border) {
  @include button-color($color, $background, $border);

  &:hover,
  &:focus {
      @include button-color($btn-primary-color, $color, $color);
  }

  &:active,
  &.active {
      @include button-color($btn-primary-color, tint("#{$color}", 70%), tint("#{$color}", 70%));
  }

  @include button-disabled();
}

@mixin button-variant-ghost($color) {
  @include button-color("#{$color}",transparent,"#{$color}");

  &:hover,
  &:focus {
    @include button-color(tint(#{$color}, 50%), transparent, tint(#{$color}, 50%));
  }

  &:active,
  &.active {
    @include button-color(tint(#{$color}, 70%), transparent, tint(#{$color}, 70%));
  }

  @include button-disabled();
}

@mixin button-group-base($btnClassName) {
  position: relative;
  display: inline-block;
  > .#{$btnClassName} {
    position: relative;
    z-index: 1;

    &:hover,
    &:focus,
    &:active,
    &.active {
      z-index: 2;
    }

    &:disabled {
      z-index: 0;
    }
  }

  // size
  &-lg > .#{$btnClassName} {
    @include button-size($btn-height-lg, $btn-padding-lg, $btn-font-size-lg, $btn-border-radius-base);
  }

  &-sm > .#{$btnClassName} {
    @include button-size($btn-height-sm, $btn-padding-sm, $font-size-base, $btn-border-radius-sm);
    > .#{$iconfont-css-prefix} {
      font-size: $font-size-base;
    }
  }
}

  
  
  // Base styles of buttons
  // --------------------------------------------------
  @mixin btn() {
    display: inline-block;
    margin-bottom: 0;
    font-weight: $btn-font-weight;
    text-align: center;
    touch-action: manipulation;
    cursor: pointer;
    background-image: none;
    border: $border-width-base $border-style-base transparent;
    white-space: nowrap;
    line-height: 1.15; // https://github.com/ant-design/ant-design/issues/7070
    @include button-size($btn-height-base, $btn-padding-base, $font-size-base, $btn-border-radius-base);
    user-select: none;
    transition: all .3s $ease-in-out;
    position: relative;
  
    > .#{$iconfont-css-prefix} {
      line-height: 1;
    }
  
    &,
    &:active,
    &:focus {
      outline: 0;
    }
  
    &:not([disabled]):hover {
      text-decoration: none;
    }
  
    &:not([disabled]):active {
      outline: 0;
      transition: none;
    }
  
    &.disabled,
    &[disabled] {
      cursor: not-allowed;
      > * {
        pointer-events: none;
      }
    }
  
    &-lg {
       @include button-size($btn-height-lg, $btn-padding-lg,$btn-font-size-lg, $btn-border-radius-base);
    }
  
    &-sm {
       @include button-size($btn-height-sm, $btn-padding-sm, $font-size-base, $btn-border-radius-sm);
    }
  }
  
  // primary button style
  @mixin btn-primary() {
    @include button-variant-primary($btn-primary-color, $btn-primary-bg);
  }
  
  // default button style
  @mixin btn-default() {
    @include button-variant-other($btn-default-color, $btn-default-bg, $btn-default-border);
    &:hover,
    &:focus,
    &:active,
    &.active {
      background: #fff;
    }
  }
  
  // ghost button style
  @mixin btn-ghost() {
     @include button-variant-other($btn-ghost-color, $btn-ghost-bg, $btn-ghost-border);
  }
  
  // dashed button style
  @mixin btn-dashed() {
    @include button-variant-other($btn-default-color, $btn-default-bg, $btn-default-border);
    border-style: dashed;
  }
  
  // danger button style
  @mixin btn-danger() {
    @include button-variant-danger($btn-danger-color, $btn-danger-bg, $btn-danger-border);
  }
  
  // circle button: the content only contains icon
  @mixin btn-circle($btnClassName: btn) {
    @include square($btn-circle-size);
   // @include button-size($btn-circle-size, 0, $font-size-base + 2px, 50%);
   @include button-size($btn-circle-size, 0, $font-size-base + 0.125, 50%);
  
    &.#{$btnClassName}-lg {
        @include square($btn-circle-size-lg);
        //@include button-size($btn-circle-size-lg, 0, $btn-font-size-lg + 2px,50%);
        @include button-size($btn-circle-size-lg, 0, $btn-font-size-lg + 0.125,50%);
    }
  
    &.#{$btnClassName}-sm {
        @include square($btn-circle-size-sm);
        @include button-size($btn-circle-size-sm,0, $font-size-base, 50%);
    }
  }
  
  // Horizontal button groups styl
  // --------------------------------------------------
  @mixin btn-group($btnClassName: btn) {
    @include button-group-base($btnClassName);
  
    .#{$btnClassName} + .#{$btnClassName},
    .#{$btnClassName} + &,
    & + .#{$btnClassName},
    & + & {
      margin-left: -1px;
    }
  
    .#{$btnClassName}:not(:first-child):not(:last-child) {
      border-radius: 0;
      padding-left: 8px;
      padding-right: 8px;
    }
  
    > .#{$btnClassName}:first-child {
      margin-left: 0;
      &:not(:last-child) {
        border-bottom-right-radius: 0;
        border-top-right-radius: 0;
        padding-right: 8px;
      }
    }
  
    > .#{$btnClassName}:last-child:not(:first-child) {
      border-bottom-left-radius: 0;
      border-top-left-radius: 0;
      padding-left: 8px;
    }
  
    & > & {
      float: left;
    }
  
    & > &:not(:first-child):not(:last-child) > .#{$btnClassName} {
      border-radius: 0;
    }
  
    & > &:first-child:not(:last-child) {
      > .#{$btnClassName}:last-child {
        border-bottom-right-radius: 0;
        border-top-right-radius: 0;
        padding-right: 8px;
      }
    }
  
    & > &:last-child:not(:first-child) > .#{$btnClassName}:first-child {
      border-bottom-left-radius: 0;
      border-top-left-radius: 0;
      padding-left: 8px;
    }
  };
